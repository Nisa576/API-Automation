{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-02T03:56:14.611Z",
    "end": "2022-09-02T03:56:15.380Z",
    "duration": 769,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cb58b044-142e-4201-8108-2e36cee7ca04",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2075f77f-79ca-4992-b396-1a14273ece92",
          "title": "[@getById user] GetById User API Test",
          "fullFile": "D:\\Api-Automation\\Automation-test\\testcase\\getById-user.js",
          "file": "\\testcase\\getById-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@getById user] GetById User API Test\"",
              "fullTitle": "[@getById user] GetById User API Test \"before all\" hook in \"[@getById user] GetById User API Test\"",
              "timedOut": false,
              "duration": 617,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Before : Create User\");\nlet response = await api.postUser(requestBody);\nexpect(response.status).to.equal(200);\n// Get ID\nresponse = await api.getUser(requestBody.firstName);\nbodyData = response.body;\nexpect(response.status).to.equal(200);\nID = bodyData.data[0].id;\n// console.log(ID);",
              "err": {},
              "uuid": "c80b5d0d-6d29-443a-a3a1-24b22f7ae64a",
              "parentUUID": "2075f77f-79ca-4992-b396-1a14273ece92",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@getById user] GetById User API Test\"",
              "fullTitle": "[@getById user] GetById User API Test \"after all\" hook in \"[@getById user] GetById User API Test\"",
              "timedOut": false,
              "duration": 9,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"After : Delete User\");\nlet response = await api.deleteById(ID);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "9578b72c-1a08-4a6b-b6b2-4af309533d0c",
              "parentUUID": "2075f77f-79ca-4992-b396-1a14273ece92",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@positive] User menggunakan data user id yang valid.",
              "fullTitle": "[@getById user] GetById User API Test [@positive] User menggunakan data user id yang valid.",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let keyword = ID;\nlet response = await api.getById(keyword);\nexpect(response.status).to.equal(200);\n// console.log(response.body)\nexpect(response.body.id).to.equal(keyword);\nexpect(response.body).has.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "4f6678d1-1da1-4f8a-bc0e-5047069275e9",
              "parentUUID": "2075f77f-79ca-4992-b396-1a14273ece92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative] User gagal mendapatkan data ketika data id yang diinputkan invalid.",
              "fullTitle": "[@getById user] GetById User API Test [@negative] User gagal mendapatkan data ketika data id yang diinputkan invalid.",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let keyword = 0;\nlet response = await api.getById(keyword);\nexpect(response.status).to.equal(404);\n// console.log(response.body)\nexpect(response.body.message).to.equal(\"user not found\");\nexpect(response.body.errorCode).to.equal(\"ER-01\");",
              "err": {},
              "uuid": "623e8427-20c7-4f64-a964-5a73286f0d43",
              "parentUUID": "2075f77f-79ca-4992-b396-1a14273ece92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f6678d1-1da1-4f8a-bc0e-5047069275e9",
            "623e8427-20c7-4f64-a964-5a73286f0d43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28909019-1127-4e47-98c5-c9fa93ac891a",
          "title": "[@put user] Put User API Test",
          "fullFile": "D:\\Api-Automation\\Automation-test\\testcase\\put-user.js",
          "file": "\\testcase\\put-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@put user] Put User API Test\"",
              "fullTitle": "[@put user] Put User API Test \"before all\" hook in \"[@put user] Put User API Test\"",
              "timedOut": false,
              "duration": 18,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Before : Create User\");\nlet response = await api.postUser(requestBody);\nexpect(response.status).to.equal(200);\n// Get ID\nresponse = await api.getUser(requestBody.firstName);\nbodyData = response.body;\nexpect(response.status).to.equal(200);\nID = bodyData.data[0].id;\n// console.log(ID);",
              "err": {},
              "uuid": "40ddeabe-46d2-4449-87f8-4cfc69cc7f80",
              "parentUUID": "28909019-1127-4e47-98c5-c9fa93ac891a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@put user] Put User API Test\"",
              "fullTitle": "[@put user] Put User API Test \"after all\" hook in \"[@put user] Put User API Test\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"After : Delete User\");\nlet response = await api.deleteById(ID);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "9a010dfc-51a3-4ea6-92bb-b7712ec76cec",
              "parentUUID": "28909019-1127-4e47-98c5-c9fa93ac891a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@positive] User berhasil mengupdate data Occupation dan Nationality",
              "fullTitle": "[@put user] Put User API Test [@positive] User berhasil mengupdate data Occupation dan Nationality",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let requestBody = testdata.dataRequest(ID);\n        let response = await api.putUser(requestBody);\n        expect(response.status).to.equal(200);\n        // console.log(response.body)\n        expect(response.body.occupation).to.equal(requestBody.occupation);\n        expect(response.body.nasionality).to.equal(requestBody.nasionality);\n        // console.log(response.body)\n        expect(response.body).has.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "1ef47e87-bde4-4a64-a308-8ed6b66124b9",
              "parentUUID": "28909019-1127-4e47-98c5-c9fa93ac891a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative1] User gagal mengupdate data ketika age bernilai 0.",
              "fullTitle": "[@put user] Put User API Test [@negative1] User gagal mengupdate data ketika age bernilai 0.",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let requestBody = testdata.dataRequest(ID);\n        requestBody.age = 0;\n        // console.log(requestBody)\n        let response = await api.putUser(requestBody);\n        expect(response.status).to.equal(400);\n        expect(response.body.errorCode).to.equal(\"ER-03\");\n        expect(response.body.message).to.equal(\"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\");\n        // console.log(response.body)",
              "err": {},
              "uuid": "416fc9a0-1b22-48ab-b417-7818cee4d3ec",
              "parentUUID": "28909019-1127-4e47-98c5-c9fa93ac891a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative2]User gagal mengupdate data ketika data hobbies merupakan empty array.",
              "fullTitle": "[@put user] Put User API Test [@negative2]User gagal mengupdate data ketika data hobbies merupakan empty array.",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let requestBody = testdata.dataRequest(ID);\n        requestBody.hobbies = [];\n        // console.log(requestBody)\n        let response = await api.putUser(requestBody);\n        // console.log(response.body)\n        expect(response.status).to.equal(400);\n        expect(response.body.message).to.equal(\"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\");\n        expect(response.body.errorCode).to.equal(\"ER-03\");",
              "err": {},
              "uuid": "c159fee4-de95-4406-b088-2609a886bf28",
              "parentUUID": "28909019-1127-4e47-98c5-c9fa93ac891a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@negative3] User gagal mengupdate data ketika data id null.",
              "fullTitle": "[@put user] Put User API Test [@negative3] User gagal mengupdate data ketika data id null.",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let requestBody = testdata.dataRequest(ID);\n        requestBody.id = null;\n        // console.log(requestBody)\n        let response = await api.putUser(requestBody);\n        expect(response.status).to.equal(404);\n        expect(response.body.message).to.equal(\"user not found\");\n        expect(response.body.errorCode).to.equal(\"ER-01\");\n        // console.log(response.body);",
              "err": {},
              "uuid": "a8ff8b18-4f4d-471c-930f-3f3e9bd53a78",
              "parentUUID": "28909019-1127-4e47-98c5-c9fa93ac891a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ef47e87-bde4-4a64-a308-8ed6b66124b9",
            "416fc9a0-1b22-48ab-b417-7818cee4d3ec",
            "c159fee4-de95-4406-b088-2609a886bf28",
            "a8ff8b18-4f4d-471c-930f-3f3e9bd53a78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}